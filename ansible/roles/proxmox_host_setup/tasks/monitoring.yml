---
# Proxmox Host Monitoring Setup

- name: Install monitoring packages
  ansible.builtin.apt:
    name:
      - prometheus-node-exporter
      - zfs-zed
    state: present

- name: Configure ZFS Event Daemon
  ansible.builtin.copy:
    content: |
      ZED_EMAIL_ADDR="{{ monitoring.email | default('admin@example.com') }}"
      ZED_EMAIL_PROG="mail"
      ZED_NOTIFY_INTERVAL_SECS=3600
      ZED_NOTIFY_VERBOSE=1
    dest: /etc/zfs/zed.d/zed.rc
  notify: restart zfs-zed

- name: Configure SMART monitoring
  ansible.builtin.cron:
    name: "SMART disk monitoring"
    minute: "0"
    hour: "3"
    job: "/usr/sbin/smartctl -a /dev/{{ item }} >> /var/log/smart-monitoring.log 2>&1"
    state: present
  loop: "{{ storage.data_disks }}"

- name: Setup ZFS health monitoring
  ansible.builtin.cron:
    name: "ZFS pool health check"
    minute: "*/15"
    job: "/usr/local/bin/zfs-health-check.sh"
    state: present

- name: Create ZFS health check script
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      # ZFS Health Check Script

      LOG_FILE="/var/log/zfs-health.log"
      ALERT_EMAIL="{{ monitoring.email | default('admin@example.com') }}"

      echo "$(date): ZFS Health Check" >> "$LOG_FILE"

      # Check pool status
      POOL_STATUS=$(zpool status -x)
      if [[ "$POOL_STATUS" != "all pools are healthy" ]]; then
          echo "ZFS Pool Issue Detected:" >> "$LOG_FILE"
          echo "$POOL_STATUS" >> "$LOG_FILE"
          # Send alert email if configured
          if [[ -n "$ALERT_EMAIL" ]]; then
              echo "$POOL_STATUS" | mail -s "ZFS Pool Alert" "$ALERT_EMAIL"
          fi
      fi

      # Check disk usage
      zfs list -o name,used,avail,usedsnap,usedds,usedrefreserv,usedchild -H | while read line; do
          USED_PCT=$(echo "$line" | awk '{print $2}' | sed 's/%//')
          if [[ "$USED_PCT" -gt 85 ]]; then
              echo "High disk usage detected: $line" >> "$LOG_FILE"
          fi
      done
    dest: /usr/local/bin/zfs-health-check.sh
    mode: '0755'
